
给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。

示例 1:

输入: num1 = "2", num2 = "3"
输出: "6"
示例 2:

输入: num1 = "123", num2 = "456"
输出: "56088"
说明：

num1 和 num2 的长度小于110。
num1 和 num2 只包含数字 0-9。
num1 和 num2 均不以零开头，除非是数字 0 本身。
不能使用任何标准库的大数类型（比如 BigInteger）或直接将输入转换为整数来处理。

static int x = [](){
    ios::sync_with_stdio(false);
    cin.tie(0);
    return 0;
}();
class Solution {
public:
    string multiply(string num1, string num2) {
        if(num1.empty() || num2.empty()) return "";
        if(num1[0] == '0' || num2[0] == '0') return "0";
        string res = "";
        int carry = 0;
        int len1 = num1.size();
        int len2 = num2.size();
        int mult[len1 + len2] = {0};
        int product;
        for(int i = num1.size() - 1;i >= 0;i--) {
            carry = 0;
            for(int j = num2.size() - 1;j >= 0;j--) {
                product = mult[i+j+1] + (num1[i] - '0') * (num2[j] - '0') + carry;
                carry = product / 10;
                mult[i+j+1] = product % 10;
            }
            mult[i]=carry;
        }
        int index = 0;
        while(mult[index] == 0) index++;
        for(int i = index;i < len1 + len2; i++){
            res += mult[i] + '0';
        }
        
        return res;
    }
};