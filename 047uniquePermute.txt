
给定一个可包含重复数字的序列，返回所有不重复的全排列。

示例:

输入: [1,1,2]
输出:
[
  [1,1,2],
  [1,2,1],
  [2,1,1]
]

class Solution {
public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> res;
        if(nums.empty()) return res;
        sort(nums.begin(),nums.end());
        res.push_back(nums);
        while(nextPermutation(nums)) {
            res.push_back(nums);
        }

        return res;
    }
    
    bool nextPermutation(vector<int>& nums) {
        int i = nums.size() - 2;
        while(i >= 0 && nums[i] >= nums[i+1]) i--;
        if(i >= 0) {
            int j = nums.size() - 1;
            while(j >= i && nums[j] <= nums[i]) j--;
            swap(nums[i],nums[j]);
        }
        else return false;
        int start = i + 1;
        int end = nums.size() - 1;
        while(start < end) {
            swap(nums[start],nums[end]);
            start++;
            end--;
        }
        return true;
    }
};